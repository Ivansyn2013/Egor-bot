def one_srt_answer(response: dict, inx: int):
    r = response

    # f'{r["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"][0]}\n' \
    # f'{r["high low medium"][0]}\n\n' \
    # f'–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –¥–æ–∑–∞' \
    answer = f'{r["–î–æ–∑–∞"][inx]}\n ({r["–ü–æ—Ä—Ü–∏—è"][inx]})\n' \
             f'–§—Ä—É–∫—Ç–æ–∑–∞ {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][r["–§—Ä—É–∫—Ç–æ–∑–∞"][inx] - 1])[0]} ' \
             f'–õ–∞–∫—Ç–æ–∑–∞  {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][(r["–õ–∞–∫—Ç–æ–∑–∞"][inx]) - 1])[0]} \n' \
             f'–ú–∞–Ω–Ω–∏—Ç–æ–ª {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][(r["–ú–∞–Ω–Ω–∏—Ç–æ–ª"][inx]) - 1])[0]} ' \
             f'–°–æ—Ä–±–∏—Ç–æ–ª {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][(r["–°–æ—Ä–±–∏—Ç–æ–ª"][inx]) - 1])[0]}\n' \
             f'–ì–û–°      {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][(r["–ì–û–°"][inx]) - 1])[0]} ' \
             f'–§—Ä—É–∫—Ç–∞–Ω—ã {(r["–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ"][(r["–§—Ä—É–∫—Ç–∞–Ω—ã"][inx]) - 1])[0]}\n' \

    return answer


def get_answer_str(response: dict):
    ''' get dick form db return str for message'''
    # 'üî¥high-FODMAPüî¥' 'high low medium'
    r = response
    #dose_str = ['–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –¥–æ–∑–∞', '–°—Ä–µ–¥–Ω—è—è –¥–æ–∑–∞', '–í—ã—Å–æ–∫–∞—è –¥–æ–∑–∞']
    doze_dict = {
        'üü¢low-FODMAPüü¢': '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –¥–æ–∑–∞',
        'üî¥high-FODMAPüî¥': '–í—ã—Å–æ–∫–∞—è –¥–æ–∑–∞',
        'üü°medium-FODMAPüü°': '–°—Ä–µ–¥–Ω—è—è –¥–æ–∑–∞',
              }
    answer = f'{r["–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"][0]}\n' \
             f'{r["high low medium"][0]}\n\n'
    h_l_m = r["high low medium"]

    if r == None:
        return None
    elif 4 > len(r['–î–æ–∑–∞']) > 0:
        for inx in range(len(list(r.values())[0])):
            # answer = f'<code>{answer}{dose_str[inx]} {one_srt_answer(r,inx)}\n </code>'
            # –∏–∑–º–µ–Ω–µ–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–∞ marckdown
            #answer = f'{answer}{dose_str[inx]} {one_srt_answer(r, inx)}\n '
            answer = f'{answer}{doze_dict[h_l_m[inx]]} {one_srt_answer(r, inx)}\n '
        if r["–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ"][0] is not None:
            answer = answer + f'{r["–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ"][0]}'

        # —ç—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        ecran = {'-': '\-', '(': '\(', ')': '\)'}
        answer = answer.translate(str.maketrans(ecran))
        answer = '`' + answer + '`'
        return f'{answer}'
    else:
        raise Exception(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: {len(r)}')
