version: "3.9"
services:
  nginx_test_1:
    image: nginx:1.23-alpine
    container_name: nginx_test_1
    ports:
     - "80:80"
     - "443:443"
    volumes:
      #- "./local_test/nginx.confd/nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./local_test/nginx.confd/nginx-del-admin.conf:/etc/nginx/conf.d/default.conf"
      - "/home/common_user/egor_bot/media:/www/media:ro"
      - "/home/common_user/egor_bot/bot_admin/bot_admin/static:/www/admin_static:ro" 
      - "./data/certbot/conf:/etc/letsencrypt"
      - "./data/certbot/www:/var/www/certbot"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" 
    depends_on:
      - certbot
    networks:
      egor_bot_network:
        ipv4_address: 172.1.1.2
    
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"    
    volumes:
      - "./data/certbot/conf:/etc/letsencrypt"
      - "./data/certbot/www:/var/www/certbot"
    networks:
      egor_bot_network:
        ipv4_address: 172.1.1.3
   
  db:
    image: mysql:8.0.32-debian
    container_name: db_mysql_egor
    expose:
      - "3306"
    env_file:
      - ".env"
#    только для тестов
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - "./Deploy/db_dump:/docker-entrypoint-initdb.d"
    networks:
      egor_bot_network:
        ipv4_address: 172.1.1.4

  bot:
    image: python:3.10-alpine3.19
    container_name: egor_bot
    volumes:
      - "./main.py:/app/main.py"
      - "./requirements.txt:/app/req.txt"
      - "./create_obj.py:/app/create_obj.py"
      - "./keybords:/app/keybords"
      - "./acces_reader:/app/acces_reader"
      - "./handlers:/app/handlers"
      - "./inline_butn:/app/inline_butn"
      - "./features:/app/features"

    expose:
      - "5001"
    env_file:
      - ".env"
    working_dir: /app
    depends_on:
      - db
    command: sh -c "
      apk update &&
      apk add --no-cache gcc musl-dev linux-headers
      mariadb-dev build-base python3-dev mariadb-connector-c-dev
      gcc libc-dev g++ libffi-dev libxml2 unixodbc-dev postgresql-dev
      freetype-dev libjpeg-turbo-dev libpng-dev
      &&
      pip3 install -r req.txt &&
      python3 -u main.py
      "
    networks:
      egor_bot_network:
        ipv4_address: 172.1.1.5
networks:
  egor_bot_network:
    name: egor_bot_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.1.1.0/24
