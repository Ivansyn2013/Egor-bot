version: "3.9"
services:
  nginx_con:
    image: nginx:1.23-alpine
    container_name: nginx_egor_bot
    ports:
     - "443:443"
    volumes:
      - "./nginx.confd/nginx-https.conf:/etc/nginx/conf.d/default.conf"
      - "./ssl/nginx_key.key:/etc/ssl/private/nginx_key.key"
      - "./ssl/nginx_cert.pem:/etc/ssl/certs/nginx_cert.pem"
        # create ssl certs
        #openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx_test.key -out /etc/ssl/certs/nginx_test.crt
    depends_on:
      - bot
      - db

  bot:
    image: python:3.9.16-alpine3.16
    container_name: egor_bot
    volumes:
      - "../main.py:/app/main.py"
      - "../requirements.txt:/app/req.txt"
      - "../create_obj.py:/app/create_obj.py"
      - "../keybords:/app/keybords"
      - "../access_reader:/app/access_reader"
      - "../handlers:/app/handlers"
      - "../inline_butn:/app/inline_butn"

    expose:
      - "5001"
    env_file:
      - "../.env"
    working_dir: /app
    depends_on:
      - db
    command: sh -c "
      apk add --no-cache gcc musl-dev linux-headers \
      mariadb-dev build-base python3-dev \
      &&
      pip install -r req.txt &&
      python3 -u main.py
      "

  db:
    image: mysql:latest
    container_name: db_mysql_egor
    expose:
      - "3300"
    env_file:
      - "../.env"
    volumes:
      - "./db_dump:/docker-entrypoint-initdb.d"